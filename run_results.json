{
   "results":[
      {
         "node":{
            "raw_sql":"select *\nfrom {{ ref('ccdata_datamart_finance') }}\nwhere postings.postings_batch_id is null or accounts.bank_id is null",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_bank_id_and_posting_batch_id_is_not_missing"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_bank_id_and_posting_batch_id_is_not_missing",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_bank_id_and_posting_batch_id_is_not_missing.sql",
            "original_file_path":"tests/white-box-post-run/assert_bank_id_and_posting_batch_id_is_not_missing.sql",
            "name":"assert_bank_id_and_posting_batch_id_is_not_missing",
            "resource_type":"test",
            "alias":"assert_bank_id_and_posting_batch_id_is_not_missing",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_datamart_finance"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_datamart_finance"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_bank_id_and_posting_batch_id_is_not_missing.sql",
            "compiled":true,
            "compiled_sql":"select *\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere postings.postings_batch_id is null or accounts.bank_id is null",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"select *\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere postings.postings_batch_id is null or accounts.bank_id is null",
            "wrapped_sql":"select count(*) as errors from (\nselect *\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere postings.postings_batch_id is null or accounts.bank_id is null\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":107162.0,
         "execution_time":30.9726779460907,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:19:28.263545Z",
               "completed_at":"2020-08-27T14:19:28.275018Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:19:28.275241Z",
               "completed_at":"2020-08-27T14:19:59.234482Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"select p.postings.posting_id, array_agg(postings.is_credit) as postings\nfrom {{ref('ccdata_datamart_finance')}} as p\ngroup by p.postings.posting_id\nhaving not (array_length(postings) = 2\n       and postings[OFFSET(0)] != postings[OFFSET(1)]\n       and postings[OFFSET(0)] in (true, false) and postings[OFFSET(1)] in (true, false))",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_each_posting_has_two_legs_credit_and_debit"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_each_posting_has_two_legs_credit_and_debit",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_each_posting_has_two_legs_credit_and_debit.sql",
            "original_file_path":"tests/white-box-post-run/assert_each_posting_has_two_legs_credit_and_debit.sql",
            "name":"assert_each_posting_has_two_legs_credit_and_debit",
            "resource_type":"test",
            "alias":"assert_each_posting_has_two_legs_credit_and_debit",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_datamart_finance"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_datamart_finance"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_each_posting_has_two_legs_credit_and_debit.sql",
            "compiled":true,
            "compiled_sql":"select p.postings.posting_id, array_agg(postings.is_credit) as postings\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance` as p\ngroup by p.postings.posting_id\nhaving not (array_length(postings) = 2\n       and postings[OFFSET(0)] != postings[OFFSET(1)]\n       and postings[OFFSET(0)] in (true, false) and postings[OFFSET(1)] in (true, false))",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"select p.postings.posting_id, array_agg(postings.is_credit) as postings\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance` as p\ngroup by p.postings.posting_id\nhaving not (array_length(postings) = 2\n       and postings[OFFSET(0)] != postings[OFFSET(1)]\n       and postings[OFFSET(0)] in (true, false) and postings[OFFSET(1)] in (true, false))",
            "wrapped_sql":"select count(*) as errors from (\nselect p.postings.posting_id, array_agg(postings.is_credit) as postings\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance` as p\ngroup by p.postings.posting_id\nhaving not (array_length(postings) = 2\n       and postings[OFFSET(0)] != postings[OFFSET(1)]\n       and postings[OFFSET(0)] in (true, false) and postings[OFFSET(1)] in (true, false))\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":795.0,
         "execution_time":6.771744966506958,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:19:59.237339Z",
               "completed_at":"2020-08-27T14:19:59.248301Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:19:59.248630Z",
               "completed_at":"2020-08-27T14:20:06.007949Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"select count(*)\nfrom {{ ref('ccdata_cbs_postings_instructions') }}\ngroup by posting_id\nhaving count(*) != 2",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_each_posting_has_two_matching_rows"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_each_posting_has_two_matching_rows",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_each_posting_has_two_matching_rows.sql",
            "original_file_path":"tests/white-box-post-run/assert_each_posting_has_two_matching_rows.sql",
            "name":"assert_each_posting_has_two_matching_rows",
            "resource_type":"test",
            "alias":"assert_each_posting_has_two_matching_rows",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_postings_instructions"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_postings_instructions"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_each_posting_has_two_matching_rows.sql",
            "compiled":true,
            "compiled_sql":"select count(*)\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_postings_instructions`\ngroup by posting_id\nhaving count(*) != 2",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"select count(*)\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_postings_instructions`\ngroup by posting_id\nhaving count(*) != 2",
            "wrapped_sql":"select count(*) as errors from (\nselect count(*)\nfrom `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_postings_instructions`\ngroup by posting_id\nhaving count(*) != 2\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":795.0,
         "execution_time":3.020897150039673,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:06.009939Z",
               "completed_at":"2020-08-27T14:20:06.019183Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:06.019551Z",
               "completed_at":"2020-08-27T14:20:09.029623Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM {{ ref('src_cbs_PaymentInstruction') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_src_cbs_PaymentInstruction') }}\n) x\n\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          message_id\n        , payment_id\n        , create_request_id\n        , scheme_transaction_id\n        , scheme\n        , execution_plan\n        , settlement_info_date\n        , settlement_info_cycle_id\n        , amount\n        , currency\n        , reference\n        , current_status\n        , current_status_reason\n        , current_status_detail_reason\n        , current_status_reason_external_code\n        , target_status\n        , target_status_reason\n        , target_status_detail_reason\n        , target_status_reason_external_code\n        , debitor_party_account_id\n        , debitor_party_name\n        , debitor_party_bank_id_code\n        , debitor_party_bank_id\n        , debitor_party_account_number\n        , creditor_party_account_id\n        , creditor_party_name\n        , creditor_party_bank_id_code\n        , creditor_party_bank_id\n        , creditor_party_account_number\n        , payment_direction\n        , payment_type\n        , scheme_payment_type\n        , payment_channel\n        , processing_priority\n        , value_timestamp\n        , update_timestamp\n        , returned_payment_id\n        , return_reason\n        , return_reason_details\n        , return_reason_external_code\n        , returned_by_payment_id\n        , emh_pubsub_timestamp\n        , emh_processing_timestamp\n        , emh_pubsub_id\n        FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_src_cbs_PaymentInstruction') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM {{ ref('src_cbs_PaymentInstruction') }}\n)  x\norder by 1",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "black-box",
               "src",
               "data_test",
               "assert_expected_result_src_cbs_PaymentInstruction"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_expected_result_src_cbs_PaymentInstruction",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"black-box/src/data_test/assert_expected_result_src_cbs_PaymentInstruction.sql",
            "original_file_path":"tests/black-box/src/assert_expected_result_src_cbs_PaymentInstruction.sql",
            "name":"assert_expected_result_src_cbs_PaymentInstruction",
            "resource_type":"test",
            "alias":"assert_expected_result_src_cbs_PaymentInstruction",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "src_cbs_PaymentInstruction"
               ],
               [
                  "src_cbs_PaymentInstruction"
               ]
            ],
            "sources":[
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_src_cbs_PaymentInstruction"
               ],
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_src_cbs_PaymentInstruction"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_src_cbs_PaymentInstruction",
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_src_cbs_PaymentInstruction",
                  "model.cco_sdl_vault_domain.src_cbs_PaymentInstruction",
                  "model.cco_sdl_vault_domain.src_cbs_PaymentInstruction"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/black-box/src/data_test/assert_expected_result_src_cbs_PaymentInstruction.sql",
            "compiled":true,
            "compiled_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n) x\n\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          message_id\n        , payment_id\n        , create_request_id\n        , scheme_transaction_id\n        , scheme\n        , execution_plan\n        , settlement_info_date\n        , settlement_info_cycle_id\n        , amount\n        , currency\n        , reference\n        , current_status\n        , current_status_reason\n        , current_status_detail_reason\n        , current_status_reason_external_code\n        , target_status\n        , target_status_reason\n        , target_status_detail_reason\n        , target_status_reason_external_code\n        , debitor_party_account_id\n        , debitor_party_name\n        , debitor_party_bank_id_code\n        , debitor_party_bank_id\n        , debitor_party_account_number\n        , creditor_party_account_id\n        , creditor_party_name\n        , creditor_party_bank_id_code\n        , creditor_party_bank_id\n        , creditor_party_account_number\n        , payment_direction\n        , payment_type\n        , scheme_payment_type\n        , payment_channel\n        , processing_priority\n        , value_timestamp\n        , update_timestamp\n        , returned_payment_id\n        , return_reason\n        , return_reason_details\n        , return_reason_external_code\n        , returned_by_payment_id\n        , emh_pubsub_timestamp\n        , emh_processing_timestamp\n        , emh_pubsub_id\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n)  x\norder by 1",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n) x\n\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          message_id\n        , payment_id\n        , create_request_id\n        , scheme_transaction_id\n        , scheme\n        , execution_plan\n        , settlement_info_date\n        , settlement_info_cycle_id\n        , amount\n        , currency\n        , reference\n        , current_status\n        , current_status_reason\n        , current_status_detail_reason\n        , current_status_reason_external_code\n        , target_status\n        , target_status_reason\n        , target_status_detail_reason\n        , target_status_reason_external_code\n        , debitor_party_account_id\n        , debitor_party_name\n        , debitor_party_bank_id_code\n        , debitor_party_bank_id\n        , debitor_party_account_number\n        , creditor_party_account_id\n        , creditor_party_name\n        , creditor_party_bank_id_code\n        , creditor_party_bank_id\n        , creditor_party_account_number\n        , payment_direction\n        , payment_type\n        , scheme_payment_type\n        , payment_channel\n        , processing_priority\n        , value_timestamp\n        , update_timestamp\n        , returned_payment_id\n        , return_reason\n        , return_reason_details\n        , return_reason_external_code\n        , returned_by_payment_id\n        , emh_pubsub_timestamp\n        , emh_processing_timestamp\n        , emh_pubsub_id\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n)  x\norder by 1",
            "wrapped_sql":"select count(*) as errors from (\nSELECT 1, x.*\n\nFROM\n(\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n) x\n\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          message_id\n        , payment_id\n        , create_request_id\n        , scheme_transaction_id\n        , scheme\n        , execution_plan\n        , settlement_info_date\n        , settlement_info_cycle_id\n        , amount\n        , currency\n        , reference\n        , current_status\n        , current_status_reason\n        , current_status_detail_reason\n        , current_status_reason_external_code\n        , target_status\n        , target_status_reason\n        , target_status_detail_reason\n        , target_status_reason_external_code\n        , debitor_party_account_id\n        , debitor_party_name\n        , debitor_party_bank_id_code\n        , debitor_party_bank_id\n        , debitor_party_account_number\n        , creditor_party_account_id\n        , creditor_party_name\n        , creditor_party_bank_id_code\n        , creditor_party_bank_id\n        , creditor_party_account_number\n        , payment_direction\n        , payment_type\n        , scheme_payment_type\n        , payment_channel\n        , processing_priority\n        , value_timestamp\n        , update_timestamp\n        , returned_payment_id\n        , return_reason\n        , return_reason_details\n        , return_reason_external_code\n        , returned_by_payment_id\n        , emh_pubsub_timestamp\n        , emh_processing_timestamp\n        , emh_pubsub_id\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_src_cbs_PaymentInstruction`\n\n    EXCEPT DISTINCT\n\n    SELECT\n      message_id\n    , payment_id\n    , create_request_id\n    , scheme_transaction_id\n    , scheme\n    , execution_plan\n    , settlement_info_date\n    , settlement_info_cycle_id\n    , amount\n    , currency\n    , reference\n    , current_status\n    , current_status_reason\n    , current_status_detail_reason\n    , current_status_reason_external_code\n    , target_status\n    , target_status_reason\n    , target_status_detail_reason\n    , target_status_reason_external_code\n    , debitor_party_account_id\n    , debitor_party_name\n    , debitor_party_bank_id_code\n    , debitor_party_bank_id\n    , debitor_party_account_number\n    , creditor_party_account_id\n    , creditor_party_name\n    , creditor_party_bank_id_code\n    , creditor_party_bank_id\n    , creditor_party_account_number\n    , payment_direction\n    , payment_type\n    , scheme_payment_type\n    , payment_channel\n    , processing_priority\n    , value_timestamp\n    , update_timestamp\n    , returned_payment_id\n    , return_reason\n    , return_reason_details\n    , return_reason_external_code\n    , returned_by_payment_id\n    , emh_pubsub_timestamp\n    , emh_processing_timestamp\n    , emh_pubsub_id\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_PaymentInstruction`\n)  x\norder by 1\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":291145.0,
         "execution_time":20.273727893829346,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:09.031895Z",
               "completed_at":"2020-08-27T14:20:09.046957Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:09.047222Z",
               "completed_at":"2020-08-27T14:20:29.304367Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"select * from\n(select * from {{ref('ccdata_datamart_finance')}}\n    where starts_with(postings.account_id,'99') and safe_cast(postings.account_id as numeric) is not null) p\nLEFT JOIN {{ref('ccdata_cbs_internal_account')}} ia\nON p.postings.account_id = ia.account_id\nWHERE ia.account_id is NULL",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_if_a_non_customer_account_is_approved"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_if_a_non_customer_account_is_approved",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_if_a_non_customer_account_is_approved.sql",
            "original_file_path":"tests/white-box-post-run/assert_if_a_non_customer_account_is_approved.sql",
            "name":"assert_if_a_non_customer_account_is_approved",
            "resource_type":"test",
            "alias":"assert_if_a_non_customer_account_is_approved",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_datamart_finance"
               ],
               [
                  "ccdata_cbs_internal_account"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_datamart_finance",
                  "model.cco_sdl_vault_domain.ccdata_cbs_internal_account"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_if_a_non_customer_account_is_approved.sql",
            "compiled":true,
            "compiled_sql":"select * from\n(select * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\n    where starts_with(postings.account_id,'99') and safe_cast(postings.account_id as numeric) is not null) p\nLEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_internal_account` ia\nON p.postings.account_id = ia.account_id\nWHERE ia.account_id is NULL",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"select * from\n(select * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\n    where starts_with(postings.account_id,'99') and safe_cast(postings.account_id as numeric) is not null) p\nLEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_internal_account` ia\nON p.postings.account_id = ia.account_id\nWHERE ia.account_id is NULL",
            "wrapped_sql":"select count(*) as errors from (\nselect * from\n(select * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\n    where starts_with(postings.account_id,'99') and safe_cast(postings.account_id as numeric) is not null) p\nLEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_internal_account` ia\nON p.postings.account_id = ia.account_id\nWHERE ia.account_id is NULL\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":22376.0,
         "execution_time":15.741920948028564,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:29.306387Z",
               "completed_at":"2020-08-27T14:20:29.316817Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:29.317080Z",
               "completed_at":"2020-08-27T14:20:45.047181Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT * from {{ref('ccdata_datamart_finance')}}\nwhere coa.CBS.BankIdentifier is null",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_if_internal_account_has_valid_coa_mapping"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_if_internal_account_has_valid_coa_mapping",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_if_internal_account_has_valid_coa_mapping.sql",
            "original_file_path":"tests/white-box-post-run/assert_if_internal_account_has_valid_coa_mapping.sql",
            "name":"assert_if_internal_account_has_valid_coa_mapping",
            "resource_type":"test",
            "alias":"assert_if_internal_account_has_valid_coa_mapping",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_datamart_finance"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_datamart_finance"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_if_internal_account_has_valid_coa_mapping.sql",
            "compiled":true,
            "compiled_sql":"SELECT * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere coa.CBS.BankIdentifier is null",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere coa.CBS.BankIdentifier is null",
            "wrapped_sql":"select count(*) as errors from (\nSELECT * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere coa.CBS.BankIdentifier is null\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":107509.0,
         "execution_time":4.528020858764648,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:45.049131Z",
               "completed_at":"2020-08-27T14:20:45.059361Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:45.059600Z",
               "completed_at":"2020-08-27T14:20:49.575886Z"
            }
         ],
         "fail":true,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates if identification field contains valid bankId and external account number\n\nselect * from {{ ref('ccdata_cbs_account') }}\nwhere concat(bank_id, external_account_number) != aps_identification",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_valid_identification_field_used_in_ccdata_cbs_account"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_valid_identification_field_used_in_ccdata_cbs_account",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_valid_identification_field_used_in_ccdata_cbs_account.sql",
            "original_file_path":"tests/white-box-post-run/assert_valid_identification_field_used_in_ccdata_cbs_account.sql",
            "name":"assert_valid_identification_field_used_in_ccdata_cbs_account",
            "resource_type":"test",
            "alias":"assert_valid_identification_field_used_in_ccdata_cbs_account",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_account"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_account"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_valid_identification_field_used_in_ccdata_cbs_account.sql",
            "compiled":true,
            "compiled_sql":"-- validates if identification field contains valid bankId and external account number\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_account`\nwhere concat(bank_id, external_account_number) != aps_identification",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates if identification field contains valid bankId and external account number\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_account`\nwhere concat(bank_id, external_account_number) != aps_identification",
            "wrapped_sql":"select count(*) as errors from (\n-- validates if identification field contains valid bankId and external account number\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_account`\nwhere concat(bank_id, external_account_number) != aps_identification\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":0.0,
         "execution_time":2.773252248764038,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:49.578129Z",
               "completed_at":"2020-08-27T14:20:49.587262Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:49.587502Z",
               "completed_at":"2020-08-27T14:20:52.350231Z"
            }
         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates if product name is in given list\n\nselect * from {{ ref('ccdata_datamart_finance') }}\nwhere accounts.is_internal = false and accounts.product_id not in {{ var('active_products') }}",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_valid_product_name_in_postings"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_valid_product_name_in_postings",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_valid_product_name_in_postings.sql",
            "original_file_path":"tests/white-box-post-run/assert_valid_product_name_in_postings.sql",
            "name":"assert_valid_product_name_in_postings",
            "resource_type":"test",
            "alias":"assert_valid_product_name_in_postings",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_datamart_finance"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_datamart_finance"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_valid_product_name_in_postings.sql",
            "compiled":true,
            "compiled_sql":"-- validates if product name is in given list\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere accounts.is_internal = false and accounts.product_id not in ('lbg_dasa_lite')",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates if product name is in given list\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere accounts.is_internal = false and accounts.product_id not in ('lbg_dasa_lite')",
            "wrapped_sql":"select count(*) as errors from (\n-- validates if product name is in given list\n\nselect * from `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_datamart_finance`\nwhere accounts.is_internal = false and accounts.product_id not in ('lbg_dasa_lite')\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":null,
         "status":0.0,
         "execution_time":2.9558959007263184,
         "thread_id":"Thread-1",
         "timing":[
            {
               "name":"compile",
               "started_at":"2020-08-27T14:20:52.352144Z",
               "completed_at":"2020-08-27T14:20:52.361504Z"
            },
            {
               "name":"execute",
               "started_at":"2020-08-27T14:20:52.361781Z",
               "completed_at":"2020-08-27T14:20:55.306990Z"
            }
         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that the distinct account id count of Account Balance and Internal Account Balance Updated\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH latest_account_balances AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_AccountBalance') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_InternalAccountBalanceUpdated') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, combined_source_distinct_count AS (\n      SELECT count(DISTINCT account_id) AS account_id_count\n      , ( SELECT count(DISTINCT account_id)\n          FROM latest_internal_account_balances) AS internal_account_id_count\n      FROM latest_account_balances)\n\n, combined_source_account_id_sum AS (\n      SELECT account_id_count + internal_account_id_count AS src_account_id_count\n      FROM combined_source_distinct_count)\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n      WHERE  balance.last_value_timestamp IS NOT NULL\n      AND eod_date = DATE(\"{{ var('reporting_date') }}\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT src_account_id_count from combined_source_account_id_sum)",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count.sql",
            "original_file_path":"tests/white-box-post-run/assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count.sql",
            "name":"assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count",
            "resource_type":"test",
            "alias":"assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "src_cbs_AccountBalance"
               ],
               [
                  "src_cbs_InternalAccountBalanceUpdated"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.src_cbs_AccountBalance",
                  "model.cco_sdl_vault_domain.src_cbs_InternalAccountBalanceUpdated",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count.sql",
            "compiled":true,
            "compiled_sql":"-- validates that the distinct account id count of Account Balance and Internal Account Balance Updated\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH latest_account_balances AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, combined_source_distinct_count AS (\n      SELECT count(DISTINCT account_id) AS account_id_count\n      , ( SELECT count(DISTINCT account_id)\n          FROM latest_internal_account_balances) AS internal_account_id_count\n      FROM latest_account_balances)\n\n, combined_source_account_id_sum AS (\n      SELECT account_id_count + internal_account_id_count AS src_account_id_count\n      FROM combined_source_distinct_count)\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE  balance.last_value_timestamp IS NOT NULL\n      AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT src_account_id_count from combined_source_account_id_sum)",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that the distinct account id count of Account Balance and Internal Account Balance Updated\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH latest_account_balances AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, combined_source_distinct_count AS (\n      SELECT count(DISTINCT account_id) AS account_id_count\n      , ( SELECT count(DISTINCT account_id)\n          FROM latest_internal_account_balances) AS internal_account_id_count\n      FROM latest_account_balances)\n\n, combined_source_account_id_sum AS (\n      SELECT account_id_count + internal_account_id_count AS src_account_id_count\n      FROM combined_source_distinct_count)\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE  balance.last_value_timestamp IS NOT NULL\n      AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT src_account_id_count from combined_source_account_id_sum)",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that the distinct account id count of Account Balance and Internal Account Balance Updated\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH latest_account_balances AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, combined_source_distinct_count AS (\n      SELECT count(DISTINCT account_id) AS account_id_count\n      , ( SELECT count(DISTINCT account_id)\n          FROM latest_internal_account_balances) AS internal_account_id_count\n      FROM latest_account_balances)\n\n, combined_source_account_id_sum AS (\n      SELECT account_id_count + internal_account_id_count AS src_account_id_count\n      FROM combined_source_distinct_count)\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE  balance.last_value_timestamp IS NOT NULL\n      AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT src_account_id_count from combined_source_account_id_sum)\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count (tests/white-box-post-run/assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: a84224b7-5c4b-4534-83e9-73cd5525ab1a)\n  \n                                                                                                   -----Query Job SQL Follows-----                                                                                                  \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_combined_src_account_balance_count_matches_fact_account_eod_balances_count\"} */\n     2:select count(*) as errors from (\n     3:-- validates that the distinct account id count of Account Balance and Internal Account Balance Updated\n     4:-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n     5:\n     6:WITH latest_account_balances AS (\n     7:      SELECT account_id\n     8:      , max(source_creation_time) AS last_value_timestamp\n     9:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n    10:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    11:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    12:          AND account_address = 'DEFAULT'\n    13:          AND type IN ('InterimBooked', 'InterimAvailable')\n    14:      GROUP BY account_id)\n    15:\n    16:, latest_internal_account_balances AS (\n    17:      SELECT DISTINCT account_id\n    18:      , max(source_creation_time) AS last_value_timestamp\n    19:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n    20:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    21:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    22:          AND account_address = 'DEFAULT'\n    23:          AND type IN ('InterimBooked', 'InterimAvailable')\n    24:      GROUP BY account_id)\n    25:\n    26:, combined_source_distinct_count AS (\n    27:      SELECT count(DISTINCT account_id) AS account_id_count\n    28:      , ( SELECT count(DISTINCT account_id)\n    29:          FROM latest_internal_account_balances) AS internal_account_id_count\n    30:      FROM latest_account_balances)\n    31:\n    32:, combined_source_account_id_sum AS (\n    33:      SELECT account_id_count + internal_account_id_count AS src_account_id_count\n    34:      FROM combined_source_distinct_count)\n    35:\n    36:, fact_distinct_account_id_count AS (\n    37:      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    38:      WHERE  balance.last_value_timestamp IS NOT NULL\n    39:      AND eod_date = DATE(\"2020-08-01\"))\n    40:\n    41:\n    42:\n    43:SELECT * FROM fact_distinct_account_id_count\n    44:WHERE fact_account_id_count != (SELECT src_account_id_count from combined_source_account_id_sum)\n    45:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.800152063369751,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that the distinct account id count of Account Dimension\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH dim_account_distinct_account_id_count AS (\n      SELECT count(distinct account_id) AS dim_account_account_id_count FROM {{ ref('ccdata_cbs_dim_account') }} WHERE is_active=true )\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n      WHERE eod_date = DATE(\"{{ var('reporting_date') }}\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT dim_account_account_id_count from dim_account_distinct_account_id_count)",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_dim_account_count_matches_fact_account_eod_balances_count"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_dim_account_count_matches_fact_account_eod_balances_count",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_dim_account_count_matches_fact_account_eod_balances_count.sql",
            "original_file_path":"tests/white-box-post-run/assert_dim_account_count_matches_fact_account_eod_balances_count.sql",
            "name":"assert_dim_account_count_matches_fact_account_eod_balances_count",
            "resource_type":"test",
            "alias":"assert_dim_account_count_matches_fact_account_eod_balances_count",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_dim_account"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_dim_account",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_dim_account_count_matches_fact_account_eod_balances_count.sql",
            "compiled":true,
            "compiled_sql":"-- validates that the distinct account id count of Account Dimension\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH dim_account_distinct_account_id_count AS (\n      SELECT count(distinct account_id) AS dim_account_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT dim_account_account_id_count from dim_account_distinct_account_id_count)",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that the distinct account id count of Account Dimension\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH dim_account_distinct_account_id_count AS (\n      SELECT count(distinct account_id) AS dim_account_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT dim_account_account_id_count from dim_account_distinct_account_id_count)",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that the distinct account id count of Account Dimension\n-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n\nWITH dim_account_distinct_account_id_count AS (\n      SELECT count(distinct account_id) AS dim_account_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, fact_distinct_account_id_count AS (\n      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n      WHERE eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_distinct_account_id_count\nWHERE fact_account_id_count != (SELECT dim_account_account_id_count from dim_account_distinct_account_id_count)\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_dim_account_count_matches_fact_account_eod_balances_count (tests/white-box-post-run/assert_dim_account_count_matches_fact_account_eod_balances_count.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: 02d06bf3-8f0a-42bf-8392-7cc989cb4506)\n  \n                                                                                           -----Query Job SQL Follows-----                                                                                         \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_dim_account_count_matches_fact_account_eod_balances_count\"} */\n     2:select count(*) as errors from (\n     3:-- validates that the distinct account id count of Account Dimension\n     4:-- matches distinct account id count of Fact Account EOD Balances for a given reporting date\n     5:\n     6:WITH dim_account_distinct_account_id_count AS (\n     7:      SELECT count(distinct account_id) AS dim_account_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n     8:\n     9:, fact_distinct_account_id_count AS (\n    10:      SELECT count(DISTINCT account_id) AS fact_account_id_count FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    11:      WHERE eod_date = DATE(\"2020-08-01\"))\n    12:\n    13:\n    14:\n    15:SELECT * FROM fact_distinct_account_id_count\n    16:WHERE fact_account_id_count != (SELECT dim_account_account_id_count from dim_account_distinct_account_id_count)\n    17:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.5349938869476318,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that the Account EOD balances for a given reporting day matches sum of\n-- account eod balances of previous day and postings default address amount for given a reporting day\n\nWITH postings_default_address_amount AS (\n        SELECT account_id, SUM (default_address.amount) AS postings_amount\n        FROM {{ ref('ccdata_cbs_fact_postings') }} AS postings\n        LEFT JOIN {{ source('ep_cco_bq_streaming_ref', 'dim_time')}} AS dim_time\n            ON dim_time.sk = postings.value_date_sk\n        WHERE dim_time.date = DATE(\"{{ var('reporting_date') }}\")\n        GROUP BY account_id)\n\n, fact_eod_balances_previous_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS prev_day_bal\n        FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n        WHERE eod_date = DATE_SUB(DATE(\"{{ var('reporting_date') }}\"), INTERVAL 1 DAY)\n        GROUP BY account_id)\n\n, fact_eod_balances_current_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS curr_day_bal\n        FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n        WHERE eod_date = DATE(\"{{ var('reporting_date') }}\")\n        GROUP BY account_id)\n\n, joined_view AS (\n        SELECT p.account_id, postings_amount, prev_day_bal, curr_day_bal\n        FROM postings_default_address_amount AS p\n        JOIN fact_eod_balances_previous_day AS pdf\n            ON p.account_id  = pdf.account_id\n        JOIN fact_eod_balances_current_day AS cdf\n            ON p.account_id  = cdf.account_id)\n\n, amount_prev_day_vs_curr_day AS(\n        SELECT account_id, postings_amount + prev_day_bal AS total_balance, curr_day_bal  FROM joined_view)\n\n\n\n\n\nSELECT * FROM amount_prev_day_vs_curr_day where total_balance != curr_day_bal",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day.sql",
            "original_file_path":"tests/white-box-post-run/assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day.sql",
            "name":"assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day",
            "resource_type":"test",
            "alias":"assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_fact_postings"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[
               [
                  "ep_cco_bq_streaming_ref",
                  "dim_time"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.ep_cco_bq_streaming_ref.dim_time",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_postings",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day.sql",
            "compiled":true,
            "compiled_sql":"-- validates that the Account EOD balances for a given reporting day matches sum of\n-- account eod balances of previous day and postings default address amount for given a reporting day\n\nWITH postings_default_address_amount AS (\n        SELECT account_id, SUM (default_address.amount) AS postings_amount\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings` AS postings\n        LEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`dim_time` AS dim_time\n            ON dim_time.sk = postings.value_date_sk\n        WHERE dim_time.date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, fact_eod_balances_previous_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS prev_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE_SUB(DATE(\"2020-08-01\"), INTERVAL 1 DAY)\n        GROUP BY account_id)\n\n, fact_eod_balances_current_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS curr_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, joined_view AS (\n        SELECT p.account_id, postings_amount, prev_day_bal, curr_day_bal\n        FROM postings_default_address_amount AS p\n        JOIN fact_eod_balances_previous_day AS pdf\n            ON p.account_id  = pdf.account_id\n        JOIN fact_eod_balances_current_day AS cdf\n            ON p.account_id  = cdf.account_id)\n\n, amount_prev_day_vs_curr_day AS(\n        SELECT account_id, postings_amount + prev_day_bal AS total_balance, curr_day_bal  FROM joined_view)\n\n\n\n\n\nSELECT * FROM amount_prev_day_vs_curr_day where total_balance != curr_day_bal",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that the Account EOD balances for a given reporting day matches sum of\n-- account eod balances of previous day and postings default address amount for given a reporting day\n\nWITH postings_default_address_amount AS (\n        SELECT account_id, SUM (default_address.amount) AS postings_amount\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings` AS postings\n        LEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`dim_time` AS dim_time\n            ON dim_time.sk = postings.value_date_sk\n        WHERE dim_time.date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, fact_eod_balances_previous_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS prev_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE_SUB(DATE(\"2020-08-01\"), INTERVAL 1 DAY)\n        GROUP BY account_id)\n\n, fact_eod_balances_current_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS curr_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, joined_view AS (\n        SELECT p.account_id, postings_amount, prev_day_bal, curr_day_bal\n        FROM postings_default_address_amount AS p\n        JOIN fact_eod_balances_previous_day AS pdf\n            ON p.account_id  = pdf.account_id\n        JOIN fact_eod_balances_current_day AS cdf\n            ON p.account_id  = cdf.account_id)\n\n, amount_prev_day_vs_curr_day AS(\n        SELECT account_id, postings_amount + prev_day_bal AS total_balance, curr_day_bal  FROM joined_view)\n\n\n\n\n\nSELECT * FROM amount_prev_day_vs_curr_day where total_balance != curr_day_bal",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that the Account EOD balances for a given reporting day matches sum of\n-- account eod balances of previous day and postings default address amount for given a reporting day\n\nWITH postings_default_address_amount AS (\n        SELECT account_id, SUM (default_address.amount) AS postings_amount\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings` AS postings\n        LEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`dim_time` AS dim_time\n            ON dim_time.sk = postings.value_date_sk\n        WHERE dim_time.date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, fact_eod_balances_previous_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS prev_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE_SUB(DATE(\"2020-08-01\"), INTERVAL 1 DAY)\n        GROUP BY account_id)\n\n, fact_eod_balances_current_day AS (\n        SELECT account_id, SUM (balance.available.amount) AS curr_day_bal\n        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n        WHERE eod_date = DATE(\"2020-08-01\")\n        GROUP BY account_id)\n\n, joined_view AS (\n        SELECT p.account_id, postings_amount, prev_day_bal, curr_day_bal\n        FROM postings_default_address_amount AS p\n        JOIN fact_eod_balances_previous_day AS pdf\n            ON p.account_id  = pdf.account_id\n        JOIN fact_eod_balances_current_day AS cdf\n            ON p.account_id  = cdf.account_id)\n\n, amount_prev_day_vs_curr_day AS(\n        SELECT account_id, postings_amount + prev_day_bal AS total_balance, curr_day_bal  FROM joined_view)\n\n\n\n\n\nSELECT * FROM amount_prev_day_vs_curr_day where total_balance != curr_day_bal\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day (tests/white-box-post-run/assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_postings was not found in location europe-west2\n  \n  (job ID: e3f5a95d-63ec-496a-a110-633da9ece356)\n  \n                                                                                                          -----Query Job SQL Follows-----                                                                                                        \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_eod_balances_curr_day_matches_sum_of_postings_amount_curr_day_and_eod_balances_prev_day\"} */\n     2:select count(*) as errors from (\n     3:-- validates that the Account EOD balances for a given reporting day matches sum of\n     4:-- account eod balances of previous day and postings default address amount for given a reporting day\n     5:\n     6:WITH postings_default_address_amount AS (\n     7:        SELECT account_id, SUM (default_address.amount) AS postings_amount\n     8:        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings` AS postings\n     9:        LEFT JOIN `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`dim_time` AS dim_time\n    10:            ON dim_time.sk = postings.value_date_sk\n    11:        WHERE dim_time.date = DATE(\"2020-08-01\")\n    12:        GROUP BY account_id)\n    13:\n    14:, fact_eod_balances_previous_day AS (\n    15:        SELECT account_id, SUM (balance.available.amount) AS prev_day_bal\n    16:        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    17:        WHERE eod_date = DATE_SUB(DATE(\"2020-08-01\"), INTERVAL 1 DAY)\n    18:        GROUP BY account_id)\n    19:\n    20:, fact_eod_balances_current_day AS (\n    21:        SELECT account_id, SUM (balance.available.amount) AS curr_day_bal\n    22:        FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    23:        WHERE eod_date = DATE(\"2020-08-01\")\n    24:        GROUP BY account_id)\n    25:\n    26:, joined_view AS (\n    27:        SELECT p.account_id, postings_amount, prev_day_bal, curr_day_bal\n    28:        FROM postings_default_address_amount AS p\n    29:        JOIN fact_eod_balances_previous_day AS pdf\n    30:            ON p.account_id  = pdf.account_id\n    31:        JOIN fact_eod_balances_current_day AS cdf\n    32:            ON p.account_id  = cdf.account_id)\n    33:\n    34:, amount_prev_day_vs_curr_day AS(\n    35:        SELECT account_id, postings_amount + prev_day_bal AS total_balance, curr_day_bal  FROM joined_view)\n    36:\n    37:\n    38:\n    39:\n    40:\n    41:SELECT * FROM amount_prev_day_vs_curr_day where total_balance != curr_day_bal\n    42:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.7995340824127197,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_dim_account') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM {{ ref('ccdata_cbs_dim_account') }}\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM {{ ref('ccdata_cbs_dim_account') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_dim_account') }}\n)  x\norder by 1",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "black-box",
               "dim",
               "data_test",
               "assert_expected_result_ccdata_account_dim"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_expected_result_ccdata_account_dim",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"black-box/dim/data_test/assert_expected_result_ccdata_account_dim.sql",
            "original_file_path":"tests/black-box/dim/assert_expected_result_ccdata_account_dim.sql",
            "name":"assert_expected_result_ccdata_account_dim",
            "resource_type":"test",
            "alias":"assert_expected_result_ccdata_account_dim",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_dim_account"
               ],
               [
                  "ccdata_cbs_dim_account"
               ]
            ],
            "sources":[
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_dim_account"
               ],
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_dim_account"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_dim_account",
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_dim_account",
                  "model.cco_sdl_vault_domain.ccdata_cbs_dim_account",
                  "model.cco_sdl_vault_domain.ccdata_cbs_dim_account"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/black-box/dim/data_test/assert_expected_result_ccdata_account_dim.sql",
            "compiled":true,
            "compiled_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n)  x\norder by 1",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n)  x\norder by 1",
            "wrapped_sql":"select count(*) as errors from (\nSELECT 1, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    indicator.title_deeds_uploaded,\n    instance_param.accrued_interest_payable_account,\n    instance_param.accrued_interest_receivable_account,\n    instance_param.annual_isa_limit,\n    instance_param.authorised_overdraft,\n    instance_param.authorised_overdraft_interest_rate,\n    instance_param.denomination,\n    instance_param.interest_destination_account,\n    instance_param.interest_payments_schedule,\n    instance_param.interest_rate,\n    instance_param.interest_received_account,\n    instance_param.interest_source_account,\n    instance_param.key_date,\n    instance_param.unauthorised_overdraft_interest_rate,\n    instance_param.minimum_balance_for_interest_accrual,\n    instance_param.unrecognised_key,\n    instance_param.unrecognised_value,\n    payment_device.sortcode_accountnumber,\n    payment_device.sortcode_accountnumber_status,\n    payment_device.iban,\n    payment_device.iban_status,\n    payment_device.pan,\n    payment_device.pan_status,\n    payment_device.bicfi,\n    payment_device.bicfi_status,\n    instance_param.balance_sweep_limit,\n    instance_param.amortisation_type,\n    instance_param.commencement_date,\n    instance_param.equity_reserve,\n    instance_param.equity_reserve_enddate,\n    instance_param.fixed_equity_reserve_amount,\n    instance_param.further_advance_flag,\n    instance_param.loan_to_value,\n    instance_param.maturity_date,\n    instance_param.minimum_monthly_payment,\n    instance_param.mortgage_indicator,\n    instance_param.mortgage_reference_number,\n    instance_param.mortgage_scheme,\n    instance_param.mortgage_term_in_months,\n    instance_param.mpo_pr_letter_flag,\n    instance_param.netting_option,\n    instance_param.offer_acceptance_date,\n    instance_param.offer_date,\n    instance_param.offset_amount,\n    instance_param.original_loan_amount,\n    instance_param.ported_flag,\n    instance_param.prepayment_penalty,\n    instance_param.property_purchase_price,\n    instance_param.mortgage_purpose,\n    instance_param.rate_type,\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n\n    EXCEPT DISTINCT\n\n    SELECT\n    account_id,\n    sk,\n    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    is_active,\n    is_internal,\n    product_name,\n    account_status,\n    nick_name,\n    stakeholder_ids,\n    permitted_denominations,\n    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    operation_type,\n    product_id,\n    product_version_id,\n    statement_frequency,\n    tside,\n    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    bank_id,\n    account_number,\n    brand,\n    plan_number,\n    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    dependants_count,\n    title_deeds_uploaded,\n    accrued_interest_payable_account,\n    accrued_interest_receivable_account,\n    annual_isa_limit,\n    authorised_overdraft,\n    authorised_overdraft_interest_rate,\n    denomination,\n    interest_destination_account,\n    interest_payments_schedule,\n    interest_rate,\n    interest_received_account,\n    interest_source_account,\n    key_date,\n    unauthorised_overdraft_interest_rate,\n    minimum_balance_for_interest_accrual,\n    unrecognised_key,\n    unrecognised_value,\n    sortcode_accountnumber,\n    sortcode_accountnumber_status,\n    iban,\n    iban_status,\n    pan,\n    pan_status,\n    bicfi,\n    bicfi_status,\n    balance_sweep_limit,\n    amortisation_type,\n    commencement_date,\n    equity_reserve,\n    equity_reserve_enddate,\n    fixed_equity_reserve_amount,\n    further_advance_flag,\n    loan_to_value,\n    maturity_date,\n    minimum_monthly_payment,\n    mortgage_indicator,\n    mortgage_reference_number,\n    mortgage_scheme,\n    mortgage_term_in_months,\n    mpo_pr_letter_flag,\n    netting_option,\n    offer_acceptance_date,\n    offer_date,\n    offset_amount,\n    original_loan_amount,\n    ported_flag,\n    prepayment_penalty,\n    property_purchase_price,\n    mortgage_purpose,\n    rate_type,\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n)  x\norder by 1\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_expected_result_ccdata_account_dim (tests/black-box/dim/assert_expected_result_ccdata_account_dim.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_dim_account was not found in location europe-west2\n  \n  (job ID: 629ac0e5-dd25-4186-b8c3-f4d534bd517c)\n  \n                                                                               -----Query Job SQL Follows-----                                                                              \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_expected_result_ccdata_account_dim\"} */\n     2:select count(*) as errors from (\n     3:SELECT 1, x.*\n     4:\n     5:FROM\n     6:(\n     7:    SELECT\n     8:    account_id,\n     9:    sk,\n    10:    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    11:    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    12:    is_active,\n    13:    is_internal,\n    14:    product_name,\n    15:    account_status,\n    16:    nick_name,\n    17:    stakeholder_ids,\n    18:    permitted_denominations,\n    19:    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n    20:    operation_type,\n    21:    product_id,\n    22:    product_version_id,\n    23:    statement_frequency,\n    24:    tside,\n    25:    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n    26:    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n    27:    bank_id,\n    28:    account_number,\n    29:    brand,\n    30:    plan_number,\n    31:    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n    32:    dependants_count,\n    33:    title_deeds_uploaded,\n    34:    accrued_interest_payable_account,\n    35:    accrued_interest_receivable_account,\n    36:    annual_isa_limit,\n    37:    authorised_overdraft,\n    38:    authorised_overdraft_interest_rate,\n    39:    denomination,\n    40:    interest_destination_account,\n    41:    interest_payments_schedule,\n    42:    interest_rate,\n    43:    interest_received_account,\n    44:    interest_source_account,\n    45:    key_date,\n    46:    unauthorised_overdraft_interest_rate,\n    47:    minimum_balance_for_interest_accrual,\n    48:    unrecognised_key,\n    49:    unrecognised_value,\n    50:    sortcode_accountnumber,\n    51:    sortcode_accountnumber_status,\n    52:    iban,\n    53:    iban_status,\n    54:    pan,\n    55:    pan_status,\n    56:    bicfi,\n    57:    bicfi_status,\n    58:    balance_sweep_limit,\n    59:    amortisation_type,\n    60:    commencement_date,\n    61:    equity_reserve,\n    62:    equity_reserve_enddate,\n    63:    fixed_equity_reserve_amount,\n    64:    further_advance_flag,\n    65:    loan_to_value,\n    66:    maturity_date,\n    67:    minimum_monthly_payment,\n    68:    mortgage_indicator,\n    69:    mortgage_reference_number,\n    70:    mortgage_scheme,\n    71:    mortgage_term_in_months,\n    72:    mpo_pr_letter_flag,\n    73:    netting_option,\n    74:    offer_acceptance_date,\n    75:    offer_date,\n    76:    offset_amount,\n    77:    original_loan_amount,\n    78:    ported_flag,\n    79:    prepayment_penalty,\n    80:    property_purchase_price,\n    81:    mortgage_purpose,\n    82:    rate_type,\n    83:\n    84:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n    85:\n    86:    EXCEPT DISTINCT\n    87:\n    88:    SELECT\n    89:    account_id,\n    90:    sk,\n    91:    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n    92:    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n    93:    is_active,\n    94:    is_internal,\n    95:    product_name,\n    96:    account_status,\n    97:    nick_name,\n    98:    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n    99:    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n   100:    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n   101:    operation_type,\n   102:    product_id,\n   103:    product_version_id,\n   104:    statement_frequency,\n   105:    tside,\n   106:    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n   107:    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n   108:    bank_id,\n   109:    account_number,\n   110:    brand,\n   111:    plan_number,\n   112:    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n   113:    dependants_count,\n   114:    indicator.title_deeds_uploaded,\n   115:    instance_param.accrued_interest_payable_account,\n   116:    instance_param.accrued_interest_receivable_account,\n   117:    instance_param.annual_isa_limit,\n   118:    instance_param.authorised_overdraft,\n   119:    instance_param.authorised_overdraft_interest_rate,\n   120:    instance_param.denomination,\n   121:    instance_param.interest_destination_account,\n   122:    instance_param.interest_payments_schedule,\n   123:    instance_param.interest_rate,\n   124:    instance_param.interest_received_account,\n   125:    instance_param.interest_source_account,\n   126:    instance_param.key_date,\n   127:    instance_param.unauthorised_overdraft_interest_rate,\n   128:    instance_param.minimum_balance_for_interest_accrual,\n   129:    instance_param.unrecognised_key,\n   130:    instance_param.unrecognised_value,\n   131:    payment_device.sortcode_accountnumber,\n   132:    payment_device.sortcode_accountnumber_status,\n   133:    payment_device.iban,\n   134:    payment_device.iban_status,\n   135:    payment_device.pan,\n   136:    payment_device.pan_status,\n   137:    payment_device.bicfi,\n   138:    payment_device.bicfi_status,\n   139:    instance_param.balance_sweep_limit,\n   140:    instance_param.amortisation_type,\n   141:    instance_param.commencement_date,\n   142:    instance_param.equity_reserve,\n   143:    instance_param.equity_reserve_enddate,\n   144:    instance_param.fixed_equity_reserve_amount,\n   145:    instance_param.further_advance_flag,\n   146:    instance_param.loan_to_value,\n   147:    instance_param.maturity_date,\n   148:    instance_param.minimum_monthly_payment,\n   149:    instance_param.mortgage_indicator,\n   150:    instance_param.mortgage_reference_number,\n   151:    instance_param.mortgage_scheme,\n   152:    instance_param.mortgage_term_in_months,\n   153:    instance_param.mpo_pr_letter_flag,\n   154:    instance_param.netting_option,\n   155:    instance_param.offer_acceptance_date,\n   156:    instance_param.offer_date,\n   157:    instance_param.offset_amount,\n   158:    instance_param.original_loan_amount,\n   159:    instance_param.ported_flag,\n   160:    instance_param.prepayment_penalty,\n   161:    instance_param.property_purchase_price,\n   162:    instance_param.mortgage_purpose,\n   163:    instance_param.rate_type,\n   164:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n   165:\n   166:) x\n   167:UNION ALL\n   168:\n   169:SELECT 2, x.*\n   170:\n   171:FROM\n   172:(\n   173:    SELECT\n   174:    account_id,\n   175:    sk,\n   176:    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n   177:    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n   178:    is_active,\n   179:    is_internal,\n   180:    product_name,\n   181:    account_status,\n   182:    nick_name,\n   183:    ARRAY_TO_STRING(IF(ARRAY_LENGTH(stakeholder_ids) = 0, NULL, stakeholder_ids) , \"$\") as stakeholder_ids,\n   184:    ARRAY_TO_STRING(IF(ARRAY_LENGTH(permitted_denominations) = 0, NULL, permitted_denominations) , \"$\") as permitted_denominations,\n   185:    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n   186:    operation_type,\n   187:    product_id,\n   188:    product_version_id,\n   189:    statement_frequency,\n   190:    tside,\n   191:    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n   192:    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n   193:    bank_id,\n   194:    account_number,\n   195:    brand,\n   196:    plan_number,\n   197:    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n   198:    dependants_count,\n   199:    indicator.title_deeds_uploaded,\n   200:    instance_param.accrued_interest_payable_account,\n   201:    instance_param.accrued_interest_receivable_account,\n   202:    instance_param.annual_isa_limit,\n   203:    instance_param.authorised_overdraft,\n   204:    instance_param.authorised_overdraft_interest_rate,\n   205:    instance_param.denomination,\n   206:    instance_param.interest_destination_account,\n   207:    instance_param.interest_payments_schedule,\n   208:    instance_param.interest_rate,\n   209:    instance_param.interest_received_account,\n   210:    instance_param.interest_source_account,\n   211:    instance_param.key_date,\n   212:    instance_param.unauthorised_overdraft_interest_rate,\n   213:    instance_param.minimum_balance_for_interest_accrual,\n   214:    instance_param.unrecognised_key,\n   215:    instance_param.unrecognised_value,\n   216:    payment_device.sortcode_accountnumber,\n   217:    payment_device.sortcode_accountnumber_status,\n   218:    payment_device.iban,\n   219:    payment_device.iban_status,\n   220:    payment_device.pan,\n   221:    payment_device.pan_status,\n   222:    payment_device.bicfi,\n   223:    payment_device.bicfi_status,\n   224:    instance_param.balance_sweep_limit,\n   225:    instance_param.amortisation_type,\n   226:    instance_param.commencement_date,\n   227:    instance_param.equity_reserve,\n   228:    instance_param.equity_reserve_enddate,\n   229:    instance_param.fixed_equity_reserve_amount,\n   230:    instance_param.further_advance_flag,\n   231:    instance_param.loan_to_value,\n   232:    instance_param.maturity_date,\n   233:    instance_param.minimum_monthly_payment,\n   234:    instance_param.mortgage_indicator,\n   235:    instance_param.mortgage_reference_number,\n   236:    instance_param.mortgage_scheme,\n   237:    instance_param.mortgage_term_in_months,\n   238:    instance_param.mpo_pr_letter_flag,\n   239:    instance_param.netting_option,\n   240:    instance_param.offer_acceptance_date,\n   241:    instance_param.offer_date,\n   242:    instance_param.offset_amount,\n   243:    instance_param.original_loan_amount,\n   244:    instance_param.ported_flag,\n   245:    instance_param.prepayment_penalty,\n   246:    instance_param.property_purchase_price,\n   247:    instance_param.mortgage_purpose,\n   248:    instance_param.rate_type,\n   249:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account`\n   250:\n   251:    EXCEPT DISTINCT\n   252:\n   253:    SELECT\n   254:    account_id,\n   255:    sk,\n   256:    TIMESTAMP_TRUNC(valid_from, SECOND) as valid_from,\n   257:    TIMESTAMP_TRUNC(valid_to, SECOND) as valid_to,\n   258:    is_active,\n   259:    is_internal,\n   260:    product_name,\n   261:    account_status,\n   262:    nick_name,\n   263:    stakeholder_ids,\n   264:    permitted_denominations,\n   265:    TIMESTAMP_TRUNC(account_created_at, SECOND) as account_created_at,\n   266:    operation_type,\n   267:    product_id,\n   268:    product_version_id,\n   269:    statement_frequency,\n   270:    tside,\n   271:    TIMESTAMP_TRUNC(account_opened_at, SECOND) as account_opened_at,\n   272:    TIMESTAMP_TRUNC(account_closed_at, SECOND) as account_closed_at,\n   273:    bank_id,\n   274:    account_number,\n   275:    brand,\n   276:    plan_number,\n   277:    TIMESTAMP_TRUNC(account_status_updated_at, SECOND) AS account_status_updated_at,\n   278:    dependants_count,\n   279:    title_deeds_uploaded,\n   280:    accrued_interest_payable_account,\n   281:    accrued_interest_receivable_account,\n   282:    annual_isa_limit,\n   283:    authorised_overdraft,\n   284:    authorised_overdraft_interest_rate,\n   285:    denomination,\n   286:    interest_destination_account,\n   287:    interest_payments_schedule,\n   288:    interest_rate,\n   289:    interest_received_account,\n   290:    interest_source_account,\n   291:    key_date,\n   292:    unauthorised_overdraft_interest_rate,\n   293:    minimum_balance_for_interest_accrual,\n   294:    unrecognised_key,\n   295:    unrecognised_value,\n   296:    sortcode_accountnumber,\n   297:    sortcode_accountnumber_status,\n   298:    iban,\n   299:    iban_status,\n   300:    pan,\n   301:    pan_status,\n   302:    bicfi,\n   303:    bicfi_status,\n   304:    balance_sweep_limit,\n   305:    amortisation_type,\n   306:    commencement_date,\n   307:    equity_reserve,\n   308:    equity_reserve_enddate,\n   309:    fixed_equity_reserve_amount,\n   310:    further_advance_flag,\n   311:    loan_to_value,\n   312:    maturity_date,\n   313:    minimum_monthly_payment,\n   314:    mortgage_indicator,\n   315:    mortgage_reference_number,\n   316:    mortgage_scheme,\n   317:    mortgage_term_in_months,\n   318:    mpo_pr_letter_flag,\n   319:    netting_option,\n   320:    offer_acceptance_date,\n   321:    offer_date,\n   322:    offset_amount,\n   323:    original_loan_amount,\n   324:    ported_flag,\n   325:    prepayment_penalty,\n   326:    property_purchase_price,\n   327:    mortgage_purpose,\n   328:    rate_type,\n   329:\n   330:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_dim_account`\n   331:)  x\n   332:order by 1\n   333:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.8005239963531494,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n          time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_account_eod_balances') }}\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_account_eod_balances') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n         time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n)  x\norder by 1",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "black-box",
               "fact",
               "data_test",
               "assert_expected_result_ccdata_cbs_fact_account_eod_balances"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_expected_result_ccdata_cbs_fact_account_eod_balances",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"black-box/fact/data_test/assert_expected_result_ccdata_cbs_fact_account_eod_balances.sql",
            "original_file_path":"tests/black-box/fact/assert_expected_result_ccdata_cbs_fact_account_eod_balances.sql",
            "name":"assert_expected_result_ccdata_cbs_fact_account_eod_balances",
            "resource_type":"test",
            "alias":"assert_expected_result_ccdata_cbs_fact_account_eod_balances",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_account_eod_balances"
               ],
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_account_eod_balances",
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_account_eod_balances",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/black-box/fact/data_test/assert_expected_result_ccdata_cbs_fact_account_eod_balances.sql",
            "compiled":true,
            "compiled_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n          time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n         time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n)  x\norder by 1",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n          time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n         time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n)  x\norder by 1",
            "wrapped_sql":"select count(*) as errors from (\nSELECT 1, x.*\n\nFROM\n(\n    SELECT\n          time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n          time_sk\n        , account_sk\n        , account_id\n        , is_internal\n        , balance_available_amount\n        , balance_available_crdr_indicator\n        , balance_available_amount_credit\n        , balance_available_amount_debit\n        , balance_booked_amount\n        , balance_booked_crdr_indicator\n        , balance_booked_amount_credit\n        , balance_booked_amount_debit\n        , balance_last_value_timestamp\n        , currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n\n    EXCEPT DISTINCT\n\n    SELECT\n         time_sk                                                       AS time_sk\n        , account_sk                                                    AS account_sk\n        , account_id                                                    AS account_id\n        , is_internal                                                   AS is_internal\n        , balance.available.amount                                      AS balance_available_amount\n        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n        , balance.available.amount_credit                               AS balance_available_amount_credit\n        , balance.available.amount_debit                                AS balance_available_amount_debit\n        , balance.booked.amount                                         AS balance_booked_amount\n        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n        , balance.last_value_timestamp                                  AS last_value_timestamp\n        , currency                                                      AS currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n)  x\norder by 1\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_expected_result_ccdata_cbs_fact_account_eod_balances (tests/black-box/fact/assert_expected_result_ccdata_cbs_fact_account_eod_balances.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: fe405651-411f-4ae6-86c8-35840c8a3574)\n  \n                                                                                        -----Query Job SQL Follows-----                                                                                       \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_expected_result_ccdata_cbs_fact_account_eod_balances\"} */\n     2:select count(*) as errors from (\n     3:SELECT 1, x.*\n     4:\n     5:FROM\n     6:(\n     7:    SELECT\n     8:          time_sk                                                       AS time_sk\n     9:        , account_sk                                                    AS account_sk\n    10:        , account_id                                                    AS account_id\n    11:        , is_internal                                                   AS is_internal\n    12:        , balance.available.amount                                      AS balance_available_amount\n    13:        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n    14:        , balance.available.amount_credit                               AS balance_available_amount_credit\n    15:        , balance.available.amount_debit                                AS balance_available_amount_debit\n    16:        , balance.booked.amount                                         AS balance_booked_amount\n    17:        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n    18:        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n    19:        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n    20:        , balance.last_value_timestamp                                  AS last_value_timestamp\n    21:        , currency                                                      AS currency\n    22:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    23:\n    24:    EXCEPT DISTINCT\n    25:\n    26:    SELECT\n    27:          time_sk\n    28:        , account_sk\n    29:        , account_id\n    30:        , is_internal\n    31:        , balance_available_amount\n    32:        , balance_available_crdr_indicator\n    33:        , balance_available_amount_credit\n    34:        , balance_available_amount_debit\n    35:        , balance_booked_amount\n    36:        , balance_booked_crdr_indicator\n    37:        , balance_booked_amount_credit\n    38:        , balance_booked_amount_debit\n    39:        , balance_last_value_timestamp\n    40:        , currency\n    41:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n    42:) x\n    43:UNION ALL\n    44:\n    45:SELECT 2, x.*\n    46:\n    47:FROM\n    48:(\n    49:    SELECT\n    50:          time_sk\n    51:        , account_sk\n    52:        , account_id\n    53:        , is_internal\n    54:        , balance_available_amount\n    55:        , balance_available_crdr_indicator\n    56:        , balance_available_amount_credit\n    57:        , balance_available_amount_debit\n    58:        , balance_booked_amount\n    59:        , balance_booked_crdr_indicator\n    60:        , balance_booked_amount_credit\n    61:        , balance_booked_amount_debit\n    62:        , balance_last_value_timestamp\n    63:        , currency\n    64:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_account_eod_balances`\n    65:\n    66:    EXCEPT DISTINCT\n    67:\n    68:    SELECT\n    69:         time_sk                                                       AS time_sk\n    70:        , account_sk                                                    AS account_sk\n    71:        , account_id                                                    AS account_id\n    72:        , is_internal                                                   AS is_internal\n    73:        , balance.available.amount                                      AS balance_available_amount\n    74:        , balance.available.crdr_indicator                              AS balance_available_crdr_indicator\n    75:        , balance.available.amount_credit                               AS balance_available_amount_credit\n    76:        , balance.available.amount_debit                                AS balance_available_amount_debit\n    77:        , balance.booked.amount                                         AS balance_booked_amount\n    78:        , balance.booked.crdr_indicator                                 AS balance_booked_crdr_indicator\n    79:        , balance.booked.amount_credit                                  AS balance_booked_amount_credit\n    80:        , balance.booked.amount_debit                                   AS balance_booked_amount_debit\n    81:        , balance.last_value_timestamp                                  AS last_value_timestamp\n    82:        , currency                                                      AS currency\n    83:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    84:)  x\n    85:order by 1\n    86:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":4.630220174789429,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM {{ ref('ccdata_cbs_fact_postings') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_postings') }}\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_postings') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM {{ ref('ccdata_cbs_fact_postings') }}\n)  x\norder by 1",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "black-box",
               "fact",
               "data_test",
               "assert_expected_result_ccdata_fact_postings"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_expected_result_ccdata_fact_postings",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"black-box/fact/data_test/assert_expected_result_ccdata_fact_postings.sql",
            "original_file_path":"tests/black-box/fact/assert_expected_result_ccdata_fact_postings.sql",
            "name":"assert_expected_result_ccdata_fact_postings",
            "resource_type":"test",
            "alias":"assert_expected_result_ccdata_fact_postings",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_fact_postings"
               ],
               [
                  "ccdata_cbs_fact_postings"
               ]
            ],
            "sources":[
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_postings"
               ],
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_postings"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_postings",
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_postings",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_postings",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_postings"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/black-box/fact/data_test/assert_expected_result_ccdata_fact_postings.sql",
            "compiled":true,
            "compiled_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n)  x\norder by 1",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n)  x\norder by 1",
            "wrapped_sql":"select count(*) as errors from (\nSELECT 1, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address_amount\n    , default_address_credit_amount\n    , default_address_debit_amount\n    , accrued_credit_interest_amount\n    , accrued_credit_interest_credit_amount\n    , accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest_amount\n    , accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest_amount\n    , auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n\n    EXCEPT DISTINCT\n\n    SELECT\n\n      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    , value_date_sk\n    , account_sk\n    , coa_sk\n    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    , request_id\n    , postings_batch_id\n    , postings_instructions_id\n    , posting_id\n    , is_credit\n    , posting_amount\n    , currency\n    , account_id\n    , account_address\n    , asset\n    , posting_phase\n    , instruction_type\n    , posting_batch_status\n    , payment_type\n    , payment_scheme\n    , transaction_type\n    , scheme_transaction_id\n    , default_address.amount default_address_amount\n    , default_address.credit_amount default_address_credit_amount\n    , default_address.debit_amount default_address_debit_amount\n    , accrued_credit_interest.amount accrued_credit_interest_amount\n    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    , emh_pubsub_id\n\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n)  x\norder by 1\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_expected_result_ccdata_fact_postings (tests/black-box/fact/assert_expected_result_ccdata_fact_postings.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_postings was not found in location europe-west2\n  \n  (job ID: 5dea043c-81bf-4eed-8aaf-968bd909f74d)\n  \n                                                                                -----Query Job SQL Follows-----                                                                               \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_expected_result_ccdata_fact_postings\"} */\n     2:select count(*) as errors from (\n     3:SELECT 1, x.*\n     4:\n     5:FROM\n     6:(\n     7:    SELECT\n     8:\n     9:      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    10:    , value_date_sk\n    11:    , account_sk\n    12:    , coa_sk\n    13:    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    14:    , request_id\n    15:    , postings_batch_id\n    16:    , postings_instructions_id\n    17:    , posting_id\n    18:    , is_credit\n    19:    , posting_amount\n    20:    , currency\n    21:    , account_id\n    22:    , account_address\n    23:    , asset\n    24:    , posting_phase\n    25:    , instruction_type\n    26:    , posting_batch_status\n    27:    , payment_type\n    28:    , payment_scheme\n    29:    , transaction_type\n    30:    , scheme_transaction_id\n    31:    , default_address.amount default_address_amount\n    32:    , default_address.credit_amount default_address_credit_amount\n    33:    , default_address.debit_amount default_address_debit_amount\n    34:    , accrued_credit_interest.amount accrued_credit_interest_amount\n    35:    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n    36:    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n    37:    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n    38:    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n    39:    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n    40:    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n    41:    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n    42:    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n    43:    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n    44:    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n    45:    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n    46:    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n    47:    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n    48:    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n    49:    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n    50:    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n    51:    , emh_pubsub_id\n    52:\n    53:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n    54:\n    55:    EXCEPT DISTINCT\n    56:\n    57:    SELECT\n    58:\n    59:      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n    60:    , value_date_sk\n    61:    , account_sk\n    62:    , coa_sk\n    63:    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n    64:    , request_id\n    65:    , postings_batch_id\n    66:    , postings_instructions_id\n    67:    , posting_id\n    68:    , is_credit\n    69:    , posting_amount\n    70:    , currency\n    71:    , account_id\n    72:    , account_address\n    73:    , asset\n    74:    , posting_phase\n    75:    , instruction_type\n    76:    , posting_batch_status\n    77:    , payment_type\n    78:    , payment_scheme\n    79:    , transaction_type\n    80:    , scheme_transaction_id\n    81:    , default_address_amount\n    82:    , default_address_credit_amount\n    83:    , default_address_debit_amount\n    84:    , accrued_credit_interest_amount\n    85:    , accrued_credit_interest_credit_amount\n    86:    , accrued_credit_interest_debit_amount\n    87:    , accrued_auth_od_interest_amount\n    88:    , accrued_auth_od_interest_credit_amount\n    89:    , accrued_auth_od_interest_debit_amount\n    90:    , accrued_unauth_od_interest_amount\n    91:    , accrued_unauth_od_interest_credit_amount\n    92:    , accrued_unauth_od_interest_debit_amount\n    93:    , auth_deferred_od_interest_amount\n    94:    , auth_deferred_od_interest_credit_amount\n    95:    , auth_deferred_od_interest_debit_amount\n    96:    , unauth_deferred_od_interest_amount\n    97:    , unauth_deferred_od_interest_credit_amount\n    98:    , unauth_deferred_od_interest_debit_amount\n    99:    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n   100:    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n   101:    , emh_pubsub_id\n   102:\n   103:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n   104:\n   105:) x\n   106:UNION ALL\n   107:\n   108:SELECT 2, x.*\n   109:\n   110:FROM\n   111:(\n   112:    SELECT\n   113:\n   114:      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n   115:    , value_date_sk\n   116:    , account_sk\n   117:    , coa_sk\n   118:    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n   119:    , request_id\n   120:    , postings_batch_id\n   121:    , postings_instructions_id\n   122:    , posting_id\n   123:    , is_credit\n   124:    , posting_amount\n   125:    , currency\n   126:    , account_id\n   127:    , account_address\n   128:    , asset\n   129:    , posting_phase\n   130:    , instruction_type\n   131:    , posting_batch_status\n   132:    , payment_type\n   133:    , payment_scheme\n   134:    , transaction_type\n   135:    , scheme_transaction_id\n   136:    , default_address_amount\n   137:    , default_address_credit_amount\n   138:    , default_address_debit_amount\n   139:    , accrued_credit_interest_amount\n   140:    , accrued_credit_interest_credit_amount\n   141:    , accrued_credit_interest_debit_amount\n   142:    , accrued_auth_od_interest_amount\n   143:    , accrued_auth_od_interest_credit_amount\n   144:    , accrued_auth_od_interest_debit_amount\n   145:    , accrued_unauth_od_interest_amount\n   146:    , accrued_unauth_od_interest_credit_amount\n   147:    , accrued_unauth_od_interest_debit_amount\n   148:    , auth_deferred_od_interest_amount\n   149:    , auth_deferred_od_interest_credit_amount\n   150:    , auth_deferred_od_interest_debit_amount\n   151:    , unauth_deferred_od_interest_amount\n   152:    , unauth_deferred_od_interest_credit_amount\n   153:    , unauth_deferred_od_interest_debit_amount\n   154:    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n   155:    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n   156:    , emh_pubsub_id\n   157:\n   158:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_postings`\n   159:\n   160:    EXCEPT DISTINCT\n   161:\n   162:    SELECT\n   163:\n   164:      TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp\n   165:    , value_date_sk\n   166:    , account_sk\n   167:    , coa_sk\n   168:    , TIMESTAMP_TRUNC(created_at, SECOND) as created_at\n   169:    , request_id\n   170:    , postings_batch_id\n   171:    , postings_instructions_id\n   172:    , posting_id\n   173:    , is_credit\n   174:    , posting_amount\n   175:    , currency\n   176:    , account_id\n   177:    , account_address\n   178:    , asset\n   179:    , posting_phase\n   180:    , instruction_type\n   181:    , posting_batch_status\n   182:    , payment_type\n   183:    , payment_scheme\n   184:    , transaction_type\n   185:    , scheme_transaction_id\n   186:    , default_address.amount default_address_amount\n   187:    , default_address.credit_amount default_address_credit_amount\n   188:    , default_address.debit_amount default_address_debit_amount\n   189:    , accrued_credit_interest.amount accrued_credit_interest_amount\n   190:    , accrued_credit_interest.credit_amount accrued_credit_interest_credit_amount\n   191:    , accrued_credit_interest.debit_amount accrued_credit_interest_debit_amount\n   192:    , accrued_auth_od_interest.amount accrued_auth_od_interest_amount\n   193:    , accrued_auth_od_interest.credit_amount accrued_auth_od_interest_credit_amount\n   194:    , accrued_auth_od_interest.debit_amount accrued_auth_od_interest_debit_amount\n   195:    , accrued_unauth_od_interest.amount accrued_unauth_od_interest_amount\n   196:    , accrued_unauth_od_interest.credit_amount accrued_unauth_od_interest_credit_amount\n   197:    , accrued_unauth_od_interest.debit_amount accrued_unauth_od_interest_debit_amount\n   198:    , auth_deferred_od_interest.amount auth_deferred_od_interest_amount\n   199:    , auth_deferred_od_interest.credit_amount auth_deferred_od_interest_credit_amount\n   200:    , auth_deferred_od_interest.debit_amount auth_deferred_od_interest_debit_amount\n   201:    , unauth_deferred_od_interest.amount unauth_deferred_od_interest_amount\n   202:    , unauth_deferred_od_interest.credit_amount unauth_deferred_od_interest_credit_amount\n   203:    , unauth_deferred_od_interest.debit_amount unauth_deferred_od_interest_debit_amount\n   204:    , TIMESTAMP_TRUNC(emh_pubsub_timestamp, SECOND) as emh_pubsub_timestamp\n   205:    , TIMESTAMP_TRUNC(emh_processing_timestamp, SECOND) as emh_processing_timestamp\n   206:    , emh_pubsub_id\n   207:\n   208:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_postings`\n   209:)  x\n   210:order by 1\n   211:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":1.0624909400939941,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_transaction_details') }}\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM {{ ref('ccdata_cbs_fact_transaction_details') }} t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n        SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM {{ ref('ccdata_cbs_fact_transaction_details') }} t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM {{ source('expected_test_data_tables', 'test_scenario01_expected_ccdata_cbs_fact_transaction_details') }}\n\n)  x\norder by 1",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "black-box",
               "fact",
               "data_test",
               "assert_expected_result_ccddata_cbs_fact_transaction_details"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_expected_result_ccddata_cbs_fact_transaction_details",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"black-box/fact/data_test/assert_expected_result_ccddata_cbs_fact_transaction_details.sql",
            "original_file_path":"tests/black-box/fact/assert_expected_result_ccddata_cbs_fact_transaction_details.sql",
            "name":"assert_expected_result_ccddata_cbs_fact_transaction_details",
            "resource_type":"test",
            "alias":"assert_expected_result_ccddata_cbs_fact_transaction_details",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_fact_transaction_details"
               ],
               [
                  "ccdata_cbs_fact_transaction_details"
               ]
            ],
            "sources":[
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_transaction_details"
               ],
               [
                  "expected_test_data_tables",
                  "test_scenario01_expected_ccdata_cbs_fact_transaction_details"
               ]
            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_transaction_details",
                  "source.cco_sdl_vault_domain.expected_test_data_tables.test_scenario01_expected_ccdata_cbs_fact_transaction_details",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_transaction_details",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_transaction_details"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/black-box/fact/data_test/assert_expected_result_ccddata_cbs_fact_transaction_details.sql",
            "compiled":true,
            "compiled_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n        SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n)  x\norder by 1",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT 1, x.*\n\nFROM\n(\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n        SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n)  x\norder by 1",
            "wrapped_sql":"select count(*) as errors from (\nSELECT 1, x.*\n\nFROM\n(\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n) x\nUNION ALL\n\nSELECT 2, x.*\n\nFROM\n(\n        SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n        is_credit,\n        flattenend_postings_batch_id as postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n        amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n\n    EXCEPT DISTINCT\n\n    SELECT\n        transaction_id,\n        account_id,\n        value_date_sk,\n        account_sk,\n        TIMESTAMP(booked_at),\n        is_credit,\n        postings_batch_id,\n        status,\n        information,\n        reference,\n        transaction_type,\n        TIMESTAMP(updated_at),\n        TIMESTAMP(value_timestamp),\n        CAST(amount AS STRING) as amount,\n        currency\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n\n)  x\norder by 1\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_expected_result_ccddata_cbs_fact_transaction_details (tests/black-box/fact/assert_expected_result_ccddata_cbs_fact_transaction_details.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_transaction_details was not found in location europe-west2\n  \n  (job ID: a930ec62-a4a0-424a-b8da-3fb08d354a2e)\n  \n                                                                                        -----Query Job SQL Follows-----                                                                                       \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_expected_result_ccddata_cbs_fact_transaction_details\"} */\n     2:select count(*) as errors from (\n     3:SELECT 1, x.*\n     4:\n     5:FROM\n     6:(\n     7:    SELECT\n     8:        transaction_id,\n     9:        account_id,\n    10:        value_date_sk,\n    11:        account_sk,\n    12:        TIMESTAMP(booked_at),\n    13:        is_credit,\n    14:        postings_batch_id,\n    15:        status,\n    16:        information,\n    17:        reference,\n    18:        transaction_type,\n    19:        TIMESTAMP(updated_at),\n    20:        TIMESTAMP(value_timestamp),\n    21:        CAST(amount AS STRING) as amount,\n    22:        currency\n    23:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n    24:\n    25:    EXCEPT DISTINCT\n    26:\n    27:    SELECT\n    28:        transaction_id,\n    29:        account_id,\n    30:        value_date_sk,\n    31:        account_sk,\n    32:        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n    33:        is_credit,\n    34:        flattenend_postings_batch_id as postings_batch_id,\n    35:        status,\n    36:        information,\n    37:        reference,\n    38:        transaction_type,\n    39:        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n    40:        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n    41:        amount,\n    42:        currency\n    43:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    44:    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n    45:\n    46:) x\n    47:UNION ALL\n    48:\n    49:SELECT 2, x.*\n    50:\n    51:FROM\n    52:(\n    53:        SELECT\n    54:        transaction_id,\n    55:        account_id,\n    56:        value_date_sk,\n    57:        account_sk,\n    58:        TIMESTAMP_TRUNC(booked_at, SECOND) as booked_at,\n    59:        is_credit,\n    60:        flattenend_postings_batch_id as postings_batch_id,\n    61:        status,\n    62:        information,\n    63:        reference,\n    64:        transaction_type,\n    65:        TIMESTAMP_TRUNC(updated_at, SECOND) as updated_at,\n    66:        TIMESTAMP_TRUNC(value_timestamp, SECOND) as value_timestamp,\n    67:        amount,\n    68:        currency\n    69:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_transaction_details` t\n    70:    LEFT JOIN UNNEST(t.postings_batch_ids) AS flattenend_postings_batch_id\n    71:\n    72:    EXCEPT DISTINCT\n    73:\n    74:    SELECT\n    75:        transaction_id,\n    76:        account_id,\n    77:        value_date_sk,\n    78:        account_sk,\n    79:        TIMESTAMP(booked_at),\n    80:        is_credit,\n    81:        postings_batch_id,\n    82:        status,\n    83:        information,\n    84:        reference,\n    85:        transaction_type,\n    86:        TIMESTAMP(updated_at),\n    87:        TIMESTAMP(value_timestamp),\n    88:        CAST(amount AS STRING) as amount,\n    89:        currency\n    90:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg_test_data`.`test_scenario01_expected_ccdata_cbs_fact_transaction_details`\n    91:\n    92:)  x\n    93:order by 1\n    94:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.7969729900360107,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"SELECT *\nFROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\nWHERE NOT  ( balance.available.amount_credit >= 0\n           AND balance.available.amount_debit >= 0\n           AND balance.booked.amount_credit >= 0\n           AND balance.booked.amount_debit >= 0 )",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_fact_account_eod_balances_amount_credit_debit_has_positive_value"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_fact_account_eod_balances_amount_credit_debit_has_positive_value",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_fact_account_eod_balances_amount_credit_debit_has_positive_value.sql",
            "original_file_path":"tests/white-box-post-run/assert_fact_account_eod_balances_amount_credit_debit_has_positive_value.sql",
            "name":"assert_fact_account_eod_balances_amount_credit_debit_has_positive_value",
            "resource_type":"test",
            "alias":"assert_fact_account_eod_balances_amount_credit_debit_has_positive_value",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_fact_account_eod_balances_amount_credit_debit_has_positive_value.sql",
            "compiled":true,
            "compiled_sql":"SELECT *\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\nWHERE NOT  ( balance.available.amount_credit >= 0\n           AND balance.available.amount_debit >= 0\n           AND balance.booked.amount_credit >= 0\n           AND balance.booked.amount_debit >= 0 )",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"SELECT *\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\nWHERE NOT  ( balance.available.amount_credit >= 0\n           AND balance.available.amount_debit >= 0\n           AND balance.booked.amount_credit >= 0\n           AND balance.booked.amount_debit >= 0 )",
            "wrapped_sql":"select count(*) as errors from (\nSELECT *\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\nWHERE NOT  ( balance.available.amount_credit >= 0\n           AND balance.available.amount_debit >= 0\n           AND balance.booked.amount_credit >= 0\n           AND balance.booked.amount_debit >= 0 )\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_fact_account_eod_balances_amount_credit_debit_has_positive_value (tests/white-box-post-run/assert_fact_account_eod_balances_amount_credit_debit_has_positive_value.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: e2fbacc6-82af-4f05-a1df-364c3be95360)\n  \n                                                                                              -----Query Job SQL Follows-----                                                                                             \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_fact_account_eod_balances_amount_credit_debit_has_positive_value\"} */\n     2:select count(*) as errors from (\n     3:SELECT *\n     4:FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n     5:WHERE NOT  ( balance.available.amount_credit >= 0\n     6:           AND balance.available.amount_debit >= 0\n     7:           AND balance.booked.amount_credit >= 0\n     8:           AND balance.booked.amount_debit >= 0 )\n     9:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.5336682796478271,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that the latest account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM {{ ref('src_cbs_AccountBalance') }}\n  WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp AS fact_balance_last_value_timestamp\n       , lat_bal.last_value_timestamp AS account_balance_last_value_timestamp\nFROM {{ ref('ccdata_cbs_fact_account_eod_balances') }} fact_bal\nLEFT JOIN latest_account_balances lat_bal\n    ON lat_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = false\n    AND fact_bal.eod_date = DATE(\"{{ var('reporting_date') }}\")\n    AND lat_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_latest_account_balance_is_used_in_fact_account_eod_balances"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_latest_account_balance_is_used_in_fact_account_eod_balances",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_latest_account_balance_is_used_in_fact_account_eod_balances.sql",
            "original_file_path":"tests/white-box-post-run/assert_latest_account_balance_is_used_in_fact_account_eod_balances.sql",
            "name":"assert_latest_account_balance_is_used_in_fact_account_eod_balances",
            "resource_type":"test",
            "alias":"assert_latest_account_balance_is_used_in_fact_account_eod_balances",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "src_cbs_AccountBalance"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.src_cbs_AccountBalance",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_latest_account_balance_is_used_in_fact_account_eod_balances.sql",
            "compiled":true,
            "compiled_sql":"-- validates that the latest account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp AS fact_balance_last_value_timestamp\n       , lat_bal.last_value_timestamp AS account_balance_last_value_timestamp\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_account_balances lat_bal\n    ON lat_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = false\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that the latest account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp AS fact_balance_last_value_timestamp\n       , lat_bal.last_value_timestamp AS account_balance_last_value_timestamp\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_account_balances lat_bal\n    ON lat_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = false\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that the latest account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp AS fact_balance_last_value_timestamp\n       , lat_bal.last_value_timestamp AS account_balance_last_value_timestamp\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_account_balances lat_bal\n    ON lat_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = false\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_latest_account_balance_is_used_in_fact_account_eod_balances (tests/white-box-post-run/assert_latest_account_balance_is_used_in_fact_account_eod_balances.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: 580bb567-3625-4ac0-a0c5-f62baade3a19)\n  \n                                                                                            -----Query Job SQL Follows-----                                                                                          \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_latest_account_balance_is_used_in_fact_account_eod_balances\"} */\n     2:select count(*) as errors from (\n     3:-- validates that the latest account balance exists in fact account eod balances for a given reporting date\n     4:\n     5:WITH latest_account_balances AS (\n     6:  SELECT account_id\n     7:  , max(source_creation_time) AS last_value_timestamp\n     8:  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n     9:  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    10:      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    11:      AND type IN ('InterimBooked', 'InterimAvailable')\n    12:      AND account_address = 'DEFAULT'\n    13:  GROUP BY account_id)\n    14:\n    15:SELECT fact_bal.account_sk\n    16:       , fact_bal.account_id\n    17:       , fact_bal.balance.last_value_timestamp AS fact_balance_last_value_timestamp\n    18:       , lat_bal.last_value_timestamp AS account_balance_last_value_timestamp\n    19:FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\n    20:LEFT JOIN latest_account_balances lat_bal\n    21:    ON lat_bal.account_id = fact_bal.account_id\n    22:WHERE fact_bal.is_internal = false\n    23:    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    24:    AND lat_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp\n    25:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":4.519566059112549,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that the latest internal account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_internal_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM {{ ref('src_cbs_InternalAccountBalanceUpdated') }}\n  WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp fact_time\n       , lat_intl_bal.last_value_timestamp lat_time\nFROM {{ ref('ccdata_cbs_fact_account_eod_balances') }} fact_bal\nLEFT JOIN latest_internal_account_balances lat_intl_bal\n    ON lat_intl_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = true\n    AND fact_bal.eod_date = DATE(\"{{ var('reporting_date') }}\")\n    AND lat_intl_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances.sql",
            "original_file_path":"tests/white-box-post-run/assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances.sql",
            "name":"assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances",
            "resource_type":"test",
            "alias":"assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "src_cbs_InternalAccountBalanceUpdated"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.src_cbs_InternalAccountBalanceUpdated",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances.sql",
            "compiled":true,
            "compiled_sql":"-- validates that the latest internal account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_internal_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp fact_time\n       , lat_intl_bal.last_value_timestamp lat_time\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_internal_account_balances lat_intl_bal\n    ON lat_intl_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = true\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_intl_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that the latest internal account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_internal_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp fact_time\n       , lat_intl_bal.last_value_timestamp lat_time\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_internal_account_balances lat_intl_bal\n    ON lat_intl_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = true\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_intl_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that the latest internal account balance exists in fact account eod balances for a given reporting date\n\nWITH latest_internal_account_balances AS (\n  SELECT account_id\n  , max(source_creation_time) AS last_value_timestamp\n  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n      AND type IN ('InterimBooked', 'InterimAvailable')\n      AND account_address = 'DEFAULT'\n  GROUP BY account_id)\n\nSELECT fact_bal.account_sk\n       , fact_bal.account_id\n       , fact_bal.balance.last_value_timestamp fact_time\n       , lat_intl_bal.last_value_timestamp lat_time\nFROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\nLEFT JOIN latest_internal_account_balances lat_intl_bal\n    ON lat_intl_bal.account_id = fact_bal.account_id\nWHERE fact_bal.is_internal = true\n    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    AND lat_intl_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances (tests/white-box-post-run/assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: 1ba57dd1-1bb0-4768-a4df-27c2d354b0d5)\n  \n                                                                                                -----Query Job SQL Follows-----                                                                                               \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_latest_internal_account_balance_is_used_in_fact_account_eod_balances\"} */\n     2:select count(*) as errors from (\n     3:-- validates that the latest internal account balance exists in fact account eod balances for a given reporting date\n     4:\n     5:WITH latest_internal_account_balances AS (\n     6:  SELECT account_id\n     7:  , max(source_creation_time) AS last_value_timestamp\n     8:  FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n     9:  WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    10:      AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    11:      AND type IN ('InterimBooked', 'InterimAvailable')\n    12:      AND account_address = 'DEFAULT'\n    13:  GROUP BY account_id)\n    14:\n    15:SELECT fact_bal.account_sk\n    16:       , fact_bal.account_id\n    17:       , fact_bal.balance.last_value_timestamp fact_time\n    18:       , lat_intl_bal.last_value_timestamp lat_time\n    19:FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances` fact_bal\n    20:LEFT JOIN latest_internal_account_balances lat_intl_bal\n    21:    ON lat_intl_bal.account_id = fact_bal.account_id\n    22:WHERE fact_bal.is_internal = true\n    23:    AND fact_bal.eod_date = DATE(\"2020-08-01\")\n    24:    AND lat_intl_bal.last_value_timestamp != fact_bal.balance.last_value_timestamp\n    25:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.7967398166656494,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that valid posting instruction batch id from Account Balance is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM {{ ref('ccdata_cbs_dim_account') }} WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_AccountBalance') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_InternalAccountBalanceUpdated') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS(\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"{{ var('reporting_date') }}\"))\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_account_balances_having_valid_posting_instruction_batch_id",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "original_file_path":"tests/white-box-post-run/assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "name":"assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "resource_type":"test",
            "alias":"assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_dim_account"
               ],
               [
                  "src_cbs_AccountBalance"
               ],
               [
                  "src_cbs_InternalAccountBalanceUpdated"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_dim_account",
                  "model.cco_sdl_vault_domain.src_cbs_AccountBalance",
                  "model.cco_sdl_vault_domain.src_cbs_InternalAccountBalanceUpdated",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "compiled":true,
            "compiled_sql":"-- validates that valid posting instruction batch id from Account Balance is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS(\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_account_balances_having_valid_posting_instruction_batch_id",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that valid posting instruction batch id from Account Balance is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS(\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_account_balances_having_valid_posting_instruction_batch_id",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that valid posting instruction batch id from Account Balance is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS(\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\"))\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_account_balances_having_valid_posting_instruction_batch_id\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances (tests/white-box-post-run/assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: 420a1143-2d18-4fd8-ba13-b36ac9eeee4f)\n  \n                                                                                                 -----Query Job SQL Follows-----                                                                                                \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_valid_account_posting_instruction_is_used_in_fact_account_eod_balances\"} */\n     2:select count(*) as errors from (\n     3:-- validates that valid posting instruction batch id from Account Balance is used in Fact Account EOD Balances\n     4:-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n     5:\n     6:WITH dim_account AS (\n     7:      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n     8:\n     9:, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n    10:      SELECT account_id\n    11:      , max(source_creation_time) AS last_value_timestamp\n    12:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n    13:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    14:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    15:          AND account_address = 'DEFAULT'\n    16:          AND type IN ('InterimBooked', 'InterimAvailable')\n    17:      GROUP BY account_id)\n    18:\n    19:, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n    20:      SELECT DISTINCT account_id\n    21:      , max(source_creation_time) AS last_value_timestamp\n    22:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n    23:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    24:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    25:          AND account_address = 'DEFAULT'\n    26:          AND type IN ('InterimBooked', 'InterimAvailable')\n    27:      GROUP BY account_id)\n    28:\n    29:, fact_account_eod_balances AS(\n    30:    SELECT DISTINCT account_id, balance.last_value_timestamp\n    31:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    32:    WHERE  balance.last_value_timestamp IS NOT NULL\n    33:        AND account_id NOT IN (SELECT account_id FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id)\n    34:        AND eod_date = DATE(\"2020-08-01\"))\n    35:\n    36:\n    37:\n    38:SELECT * FROM fact_account_eod_balances\n    39:EXCEPT DISTINCT\n    40:SELECT * FROM latest_account_balances_having_valid_posting_instruction_batch_id\n    41:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.7995829582214355,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      },
      {
         "node":{
            "raw_sql":"-- validates that valid posting instruction batch id from Internal Account Balance Updated is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM {{ ref('ccdata_cbs_dim_account') }} WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_AccountBalance') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM {{ ref('src_cbs_InternalAccountBalanceUpdated') }}\n      WHERE source_creation_time <= TIMESTAMP(\"{{ var('reporting_date') }} 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS (\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM {{ ref('ccdata_cbs_fact_account_eod_balances') }}\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"{{ var('reporting_date') }}\") )\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id",
            "database":"eplus-dcc-bld-02-5a16",
            "schema":"ep_cco_bld_bqd_euwe2_ep_cco_mg",
            "fqn":[
               "cco_sdl_vault_domain",
               "white-box-post-run",
               "data_test",
               "assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances"
            ],
            "unique_id":"test.cco_sdl_vault_domain.assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "package_name":"cco_sdl_vault_domain",
            "root_path":"/Users/mangera/Documents/master/ep-cco/dbt/cco_sdl_vault_domain",
            "path":"white-box-post-run/data_test/assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "original_file_path":"tests/white-box-post-run/assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "name":"assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "resource_type":"test",
            "alias":"assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances",
            "config":{
               "enabled":true,
               "materialized":"view",
               "persist_docs":{
                  "relation":true
               },
               "post-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('end') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "pre-hook":[
                  {
                     "sql":"{{ cco_commons.log_audit_event('start') }}",
                     "transaction":true,
                     "index":null
                  }
               ],
               "vars":{
                  "src_data":"ep_cco_bq_streaming_source",
                  "reporting_date":"2020-08-01",
                  "active_products":"('lbg_dasa_lite')"
               },
               "quoting":{

               },
               "column_types":{

               },
               "tags":[

               ],
               "severity":"ERROR",
               "labels":{
                  "owner":"raghava-khrishna",
                  "cost_centre":"eplus-cc-cco",
                  "dataclassification":"confidential"
               }
            },
            "tags":[
               "data"
            ],
            "refs":[
               [
                  "ccdata_cbs_dim_account"
               ],
               [
                  "src_cbs_AccountBalance"
               ],
               [
                  "src_cbs_InternalAccountBalanceUpdated"
               ],
               [
                  "ccdata_cbs_fact_account_eod_balances"
               ]
            ],
            "sources":[

            ],
            "depends_on":{
               "macros":[
                  "macro.cco_commons.log_audit_event"
               ],
               "nodes":[
                  "model.cco_sdl_vault_domain.ccdata_cbs_dim_account",
                  "model.cco_sdl_vault_domain.src_cbs_AccountBalance",
                  "model.cco_sdl_vault_domain.src_cbs_InternalAccountBalanceUpdated",
                  "model.cco_sdl_vault_domain.ccdata_cbs_fact_account_eod_balances"
               ]
            },
            "description":"",
            "columns":{

            },
            "meta":{

            },
            "docs":{
               "show":true
            },
            "patch_path":null,
            "build_path":"target/compiled/cco_sdl_vault_domain/white-box-post-run/data_test/assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances.sql",
            "compiled":true,
            "compiled_sql":"-- validates that valid posting instruction batch id from Internal Account Balance Updated is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS (\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\") )\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id",
            "extra_ctes_injected":true,
            "extra_ctes":[

            ],
            "injected_sql":"-- validates that valid posting instruction batch id from Internal Account Balance Updated is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS (\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\") )\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id",
            "wrapped_sql":"select count(*) as errors from (\n-- validates that valid posting instruction batch id from Internal Account Balance Updated is used in Fact Account EOD Balances\n-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n\nWITH dim_account AS (\n      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n\n, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n      SELECT DISTINCT account_id\n      , max(source_creation_time) AS last_value_timestamp\n      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n          AND account_address = 'DEFAULT'\n          AND type IN ('InterimBooked', 'InterimAvailable')\n      GROUP BY account_id)\n\n, fact_account_eod_balances AS (\n    SELECT DISTINCT account_id, balance.last_value_timestamp\n    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    WHERE  balance.last_value_timestamp IS NOT NULL\n        AND account_id NOT IN (SELECT account_id FROM latest_account_balances_having_valid_posting_instruction_batch_id)\n        AND eod_date = DATE(\"2020-08-01\") )\n\n\n\nSELECT * FROM fact_account_eod_balances\nEXCEPT DISTINCT\nSELECT * FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id\n) sbq",
            "column_name":null,
            "test_metadata":null
         },
         "error":"Runtime Error in test assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances (tests/white-box-post-run/assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances.sql)\n  404 Not found: Table eplus-dcc-bld-02-5a16:ep_cco_bld_bqd_euwe2_ep_cco_mg.ccdata_cbs_fact_account_eod_balances was not found in location europe-west2\n  \n  (job ID: e4fe641d-1a40-4417-9179-2bb7d3a5aa83)\n  \n                                                                                                      -----Query Job SQL Follows-----                                                                                                    \n  \n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |\n     1:/* {\"app\": \"dbt\", \"dbt_version\": \"0.16.1\", \"profile_name\": \"eplus-cco\", \"target_name\": \"common\", \"node_id\": \"test.cco_sdl_vault_domain.assert_valid_internal_account_posting_instruction_is_used_in_fact_account_eod_balances\"} */\n     2:select count(*) as errors from (\n     3:-- validates that valid posting instruction batch id from Internal Account Balance Updated is used in Fact Account EOD Balances\n     4:-- i.e. posting_instruction_batch_id should be equal to data_posting_instruction_batch_id\n     5:\n     6:WITH dim_account AS (\n     7:      SELECT distinct account_id FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_dim_account` WHERE is_active=true )\n     8:\n     9:, latest_account_balances_having_valid_posting_instruction_batch_id AS (\n    10:      SELECT account_id\n    11:      , max(source_creation_time) AS last_value_timestamp\n    12:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_AccountBalance`\n    13:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    14:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    15:          AND account_address = 'DEFAULT'\n    16:          AND type IN ('InterimBooked', 'InterimAvailable')\n    17:      GROUP BY account_id)\n    18:\n    19:, latest_internal_account_balances_having_valid_posting_instruction_batch_id AS (\n    20:      SELECT DISTINCT account_id\n    21:      , max(source_creation_time) AS last_value_timestamp\n    22:      FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`src_cbs_InternalAccountBalanceUpdated`\n    23:      WHERE source_creation_time <= TIMESTAMP(\"2020-08-01 23:59:59.999999\")\n    24:          AND posting_instruction_batch_id = data_posting_instruction_batch_id\n    25:          AND account_address = 'DEFAULT'\n    26:          AND type IN ('InterimBooked', 'InterimAvailable')\n    27:      GROUP BY account_id)\n    28:\n    29:, fact_account_eod_balances AS (\n    30:    SELECT DISTINCT account_id, balance.last_value_timestamp\n    31:    FROM `eplus-dcc-bld-02-5a16`.`ep_cco_bld_bqd_euwe2_ep_cco_mg`.`ccdata_cbs_fact_account_eod_balances`\n    32:    WHERE  balance.last_value_timestamp IS NOT NULL\n    33:        AND account_id NOT IN (SELECT account_id FROM latest_account_balances_having_valid_posting_instruction_batch_id)\n    34:        AND eod_date = DATE(\"2020-08-01\") )\n    35:\n    36:\n    37:\n    38:SELECT * FROM fact_account_eod_balances\n    39:EXCEPT DISTINCT\n    40:SELECT * FROM latest_internal_account_balances_having_valid_posting_instruction_batch_id\n    41:) sbq\n      |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |    .    |",
         "status":"ERROR",
         "execution_time":0.801135778427124,
         "thread_id":"Thread-1",
         "timing":[

         ],
         "fail":null,
         "warn":null,
         "skip":false
      }
   ],
   "generated_at":"2020-08-27T14:21:12.218548Z",
   "elapsed_time":114.22987985610962
}